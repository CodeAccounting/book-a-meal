// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Form disables submit button when submitting form 1`] = `
<div>
  <div
    className="modal-preloader text-center"
  >
    <MiniPreloader />
  </div>
</div>
`;

exports[`Form renders addMeal form correctly 1`] = `
<div>
  <React.Fragment>
    <p
      className="text-muted mx-auto text-center"
    >
      Fields marked
      <span
        className="danger"
      >
         *
      </span>
       are required
    </p>
    <form
      onSubmit={[Function]}
    >
      <MealForm
        handlers={
          Object {
            "handleBlur": [Function],
            "handleChange": [Function],
            "handleFocus": [Function],
            "handleSubmit": [Function],
          }
        }
        meal={null}
        state={
          Object {
            "asyncValidating": false,
            "error": Object {
              "description": null,
              "imageUrl": null,
              "price": null,
              "title": null,
              "vegetarian": null,
            },
            "formValid": false,
            "pristine": true,
            "touched": Object {
              "description": false,
              "imageUrl": false,
              "price": false,
              "title": false,
              "vegetarian": false,
            },
            "type": "addMeal",
            "values": Object {
              "description": "",
              "imageUrl": "http://res.cloudinary.com/iverenshaguy/image/upload/v1532540264/bookameal/default-img.jpg",
              "price": "",
              "title": "",
              "vegetarian": false,
            },
          }
        }
        type="addMeal"
        uploading={null}
      />
      <button
        className="btn btn-pri btn-block"
        disabled={true}
      >
        SIGN IN
      </button>
    </form>
    <p>
      something
    </p>
  </React.Fragment>
</div>
`;

exports[`Form renders caterer's signup form correctly 1`] = `
<div>
  <React.Fragment>
    <p
      className="text-muted mx-auto text-center"
    >
      Fields marked
      <span
        className="danger"
      >
         *
      </span>
       are required
    </p>
    <form
      onSubmit={[Function]}
    >
      <CatererSignupForm
        handlers={
          Object {
            "handleBlur": [Function],
            "handleChange": [Function],
            "handleFocus": [Function],
            "handleSubmit": [Function],
          }
        }
        state={
          Object {
            "asyncValidating": false,
            "error": Object {
              "businessAddress": null,
              "businessName": null,
              "businessPhoneNo": null,
              "email": null,
              "password": null,
              "passwordConfirm": null,
              "role": null,
            },
            "formValid": false,
            "pristine": true,
            "touched": Object {
              "businessAddress": false,
              "businessName": false,
              "businessPhoneNo": false,
              "email": false,
              "password": false,
              "passwordConfirm": false,
              "role": false,
            },
            "type": "catererSignup",
            "values": Object {
              "businessAddress": "",
              "businessName": "",
              "businessPhoneNo": "",
              "email": "",
              "password": "",
              "passwordConfirm": "",
              "role": "caterer",
            },
          }
        }
        type="catererSignup"
      />
      <button
        className="btn btn-pri btn-block"
        disabled={true}
      >
        SIGN IN
      </button>
    </form>
    <p>
      something
    </p>
  </React.Fragment>
</div>
`;

exports[`Form renders correctly 1`] = `
<div>
  <React.Fragment>
    <form
      onSubmit={[Function]}
    >
      <SigninForm
        handlers={
          Object {
            "handleBlur": [Function],
            "handleChange": [Function],
            "handleFocus": [Function],
            "handleSubmit": [Function],
          }
        }
        state={
          Object {
            "asyncValidating": false,
            "error": Object {
              "email": null,
              "password": null,
            },
            "formValid": false,
            "pristine": true,
            "touched": Object {
              "email": false,
              "password": false,
            },
            "type": "signin",
            "values": Object {
              "email": "",
              "password": "",
            },
          }
        }
        type="signin"
      />
      <button
        className="btn btn-pri btn-block"
        disabled={true}
      >
        SIGN IN
      </button>
    </form>
    <p>
      something
    </p>
  </React.Fragment>
</div>
`;

exports[`Form renders customer's signup form correctly 1`] = `
<div>
  <React.Fragment>
    <p
      className="text-muted mx-auto text-center"
    >
      Fields marked
      <span
        className="danger"
      >
         *
      </span>
       are required
    </p>
    <form
      onSubmit={[Function]}
    >
      <CustomerSignupForm
        handlers={
          Object {
            "handleBlur": [Function],
            "handleChange": [Function],
            "handleFocus": [Function],
            "handleSubmit": [Function],
          }
        }
        state={
          Object {
            "asyncValidating": false,
            "error": Object {
              "email": null,
              "firstname": null,
              "lastname": null,
              "password": null,
              "passwordConfirm": null,
              "role": null,
            },
            "formValid": false,
            "pristine": true,
            "touched": Object {
              "email": false,
              "firstname": false,
              "lastname": false,
              "password": false,
              "passwordConfirm": false,
              "role": false,
            },
            "type": "customerSignup",
            "values": Object {
              "email": "",
              "firstname": "",
              "lastname": "",
              "password": "",
              "passwordConfirm": "",
              "role": "customer",
            },
          }
        }
        type="customerSignup"
      />
      <button
        className="btn btn-pri btn-block"
        disabled={true}
      >
        SIGN IN
      </button>
    </form>
    <p>
      something
    </p>
  </React.Fragment>
</div>
`;

exports[`Form renders editMeal form correctly 1`] = `
<div>
  <React.Fragment>
    <p
      className="text-muted mx-auto text-center"
    >
      Fields marked
      <span
        className="danger"
      >
         *
      </span>
       are required
    </p>
    <form
      onSubmit={[Function]}
    >
      <MealForm
        handlers={
          Object {
            "handleBlur": [Function],
            "handleChange": [Function],
            "handleFocus": [Function],
            "handleSubmit": [Function],
          }
        }
        meal={
          Object {
            "description": "",
            "id": "81211c24-51c0-46ec-b1e0-18db55880954",
            "imageUrl": "http://www.preciouscore.com/wp-content/uploads/2017/11/How-to-cook-jollof-rice-in-the-oven-750x500.jpg",
            "price": "2500.00",
            "title": "Jollof Rice and Chicken",
            "vegetarian": false,
          }
        }
        state={
          Object {
            "asyncValidating": false,
            "error": Object {
              "description": null,
              "imageUrl": null,
              "price": null,
              "title": null,
              "vegetarian": null,
            },
            "formValid": true,
            "pristine": true,
            "touched": Object {
              "description": false,
              "imageUrl": false,
              "price": false,
              "title": false,
              "vegetarian": false,
            },
            "type": "editMeal",
            "values": Object {
              "description": "",
              "id": "81211c24-51c0-46ec-b1e0-18db55880954",
              "imageUrl": "http://www.preciouscore.com/wp-content/uploads/2017/11/How-to-cook-jollof-rice-in-the-oven-750x500.jpg",
              "price": "2500.00",
              "title": "Jollof Rice and Chicken",
              "vegetarian": false,
            },
          }
        }
        type="editMeal"
        updating={false}
        uploading={null}
      />
      <button
        className="btn btn-pri btn-block"
        disabled={false}
      >
        SIGN IN
      </button>
    </form>
    <p>
      something
    </p>
  </React.Fragment>
</div>
`;

exports[`Form shows error alert and disables submit button when there's a submit error 1`] = `
<div>
  <React.Fragment>
    <form
      onSubmit={[Function]}
    >
      <p
        className="danger text-center mb-0"
      >
        Username/Password do not match
      </p>
      <SigninForm
        handlers={
          Object {
            "handleBlur": [Function],
            "handleChange": [Function],
            "handleFocus": [Function],
            "handleSubmit": [Function],
          }
        }
        state={
          Object {
            "asyncValidating": false,
            "error": Object {
              "email": null,
              "password": null,
            },
            "formValid": false,
            "pristine": true,
            "touched": Object {
              "email": false,
              "password": false,
            },
            "type": "signin",
            "values": Object {
              "email": "",
              "password": "",
            },
          }
        }
        type="signin"
      />
      <button
        className="btn btn-pri btn-block"
        disabled={true}
      >
        SIGN IN
      </button>
    </form>
    <p>
      something
    </p>
  </React.Fragment>
</div>
`;
